// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id         String             @id @default(uuid())
  name       String
  attendance AttendanceRecord[]
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
}

model Session {
  id         String             @id @default(uuid())
  date       DateTime
  part       Int               @db.SmallInt
  number     Int
  name       String?
  attendance AttendanceRecord[]
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt

  @@unique([date, part])
}

enum AttendanceStatus {
  PRESENT
  ABSENT
  JUSTIFIED
}

model AttendanceRecord {
  id            String           @id @default(uuid())
  student       Student          @relation(fields: [studentId], references: [id])
  studentId     String
  session       Session          @relation(fields: [sessionId], references: [id])
  sessionId     String
  status        AttendanceStatus
  justification String?
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt

  @@unique([studentId, sessionId])
}

model Settings {
  id                 String   @id @default(uuid())
  totalSessions      Int      @default(14)
  firstPartSessions  Int      @default(7)
  attendanceThreshold Int     @default(60)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("settings")
}
